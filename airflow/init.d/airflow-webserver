#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#       /etc/rc.d/init.d/airflowserver
#
#       AirFlow WebServer
#
# chkconfig: 2345 90 10
# description: AirFlow WebServer
# pidfile: /var/run/airflow/airflow.pid

service=`cat /etc/default/services | grep AirflowWebserver`
if [ -z "$service" ];then
	exit 1
fi
. /etc/init.d/functions
source /root/.bashrc
AIRFLOW_HOME=/home/airflow
LOCKFILE=/var/lock/subsys/airflow-webserver
LOGDIR=/var/log/airflow  # Log directory to use
PIDFILE=/var/run/airflow/airflow-webserver.pid
USER=root
AIRFLOW_SHUTDOWN_TIMEOUT=15
#PYENV_PATH=/root/.pyenv/bin
PYENV_PATH=/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/shims:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/shims:/root/.pyenv/bin:/root/.pyenv/shims:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/shims:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/shims:/root/.pyenv/bin
PATH=$PATH:$PYENV_PATH

airflow_start() {
        echo -n "Starting airflow: "
        for dir in $(dirname $PIDFILE) $LOGDIR
        do
			echo "mkdir pid dir"
			echo $dir
            mkdir -p $dir
            chown -R $USER $dir
        done

        # Check if already running
        if [ -e $PIDFILE ] && checkpid $(cat $PIDFILE) ; then
            echo "already running"
            return 0
        fi

        # the supervisor itself will setuid down to $USER
        #su -p $USER -c "airflow webserver &"
	su -p $USER -c "airflow webserver --pid $PIDFILE > ${LOGDIR}/airflow_webserver.log 2>${LOGDIR}/airflow_webserver.out &"
	sleep 3
	pid=`cat $PIDFILE`
        ret=$?
        base=$(basename $0)
        if [ $ret -eq 0 ]; then
            sleep 2
            test -e $PIDFILE && checkpid $(cat $PIDFILE)
            ret=$?
        fi
        if [ $ret -eq 0 ]; then
            touch $LOCKFILE
            success $"$base startup"
        else
            failure $"$base startup"
        fi
        echo
        return $ret
}

airflow_stop() {
        if [ ! -e $PIDFILE ]; then
            success "AirFlow is not running"
            return 0
        fi

        echo -n "Shutting down airflow webserver: "

        LIVY_PID=`cat $PIDFILE 2>/dev/null`
        if [ -n "$LIVY_PID" ]; then
          kill -TERM ${LIVY_PID} &>/dev/null
          for i in `seq 1 ${LIVY_SHUTDOWN_TIMEOUT}` ; do
            kill -0 ${LIVY_PID} &>/dev/null || break
            sleep 1
          done
          kill -KILL ${LIVY_PID} &>/dev/null
        fi
        echo
        rm -f $LOCKFILE $PIDFILE
	status -p $PIDFILE supervisor
        return 0
}

airflow_restart() {
  airflow_stop
  airflow_start
}

case "$1" in
    start)
        airflow_start
        ;;
    stop)
        airflow_stop
        ;;
    status)
        status -p $PIDFILE supervisor
        ;;
    restart|reload)
        airflow_restart
        ;;
    condrestart)
        [ -f $LOCKFILE ] && restart || :
        ;;
    *)
        echo "Usage: airflow-webserver {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?

